- name: Import vars
  run_once: true
  include_vars:
    file: inventory/local/cluster-variable.yaml
    name: vardata

##Check if metallb namespace there, end if so#######################################
- name: Check if metallb is running
  shell: "kubectl get namespace |grep metallb-system"
  register: running_process
  ignore_errors: true
  #failed_when: running_process.rc < 1
- debug:
    msg: "Metallb is running"
  when: running_process.stdout_lines|length > 0
  ignore_errors: true
- meta: end_host
  when: running_process.stdout_lines|length > 0
  ignore_errors: true

##ADD HELM REPOS####################################################################
- name: Add traefik repository
  kubernetes.core.helm_repository:
    name: traefik
    repo_url: https://traefik.github.io/charts

- name: Add nfs-provisioner repository
  kubernetes.core.helm_repository:
    name: nfs-subdir-external-provisioner
    repo_url: https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner

- name: Add prometheus-grafana repository
  kubernetes.core.helm_repository:
    name: prometheus-community
    repo_url: https://prometheus-community.github.io/helm-charts

- name: Add prometheus-grafana repository
  kubernetes.core.helm_repository:
    name: grafana
    repo_url: https://grafana.github.io/helm-charts

#- name: Add Kured repository
#  kubernetes.core.helm_repository:
#    name: kubereboot
#    repo_url: https://kubereboot.github.io/charts

##################MetalLB############################################################  
- name: Install Metallb
  become: true
  shell: "kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.14.8/config/manifests/metallb-native.yaml --kubeconfig /root/.kube/config"

- name: Create metallb.yaml on host
  file:
      path: "metallb.yaml"
      state: touch

- name: metallb.yaml add block of lines
  blockinfile:
    path: metallb.yaml  
    state: present
    block: |
      apiVersion: metallb.io/v1beta1
      kind: IPAddressPool
      metadata:
        creationTimestamp: null
        name: default
        namespace: metallb-system
      spec:
        addresses:
        - {{ vardata.metallb }}
      status: {}
      ---
      apiVersion: metallb.io/v1beta1
      kind: L2Advertisement
      metadata:
        creationTimestamp: null
        name: l2advertisement1
        namespace: metallb-system
      spec:
        ipAddressPools:
        - default       
      status: {}
      ---


- name: Install Metallb config yaml
  become: true
  shell: "{{ item }}"
  with_items: 
    - "kubectl wait --for=condition=Ready pods --all -n metallb-system --timeout 480s --kubeconfig /root/.kube/config"
    - "kubectl apply -f metallb.yaml --kubeconfig /root/.kube/config"

##################Traefik##################################################################                                                

- name: Install/Upgrade Traefik Helm chart
  become: true
  kubernetes.core.helm:
    name: traefik
    chart_ref: traefik
    chart_repo_url: https://traefik.github.io/charts
    namespace: kube-system    
    release_state: present 
    kubeconfig: /tmp/config

##################NFS provisioner############################################################
- name: Install/Upgrade NFS Helm chart
  become: true
  kubernetes.core.helm:
    name: nfs-subdir-external-provisioner
    chart_ref: nfs-subdir-external-provisioner
    chart_repo_url: https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner
    namespace: kube-system
    release_state: present
    set_values:
      - value: nfs.server=192.168.122.5
      - value: nfs.path=/data/nfs
      - value: storageClass.onDelete=true
    kubeconfig: /tmp/config

- name: Make nfs-client storageclass default storage class
  become: true
  command: "{{ item }}"
  with_items:
      - "kubectl patch storageclass nfs-client -p '{\"metadata\": {\"annotations\":{\"storageclass.kubernetes.io/is-default-class\":\"true\"}}}' --kubeconfig /root/.kube/config"
  ignore_errors: true


##################Create local storage class for Loki to use####################################
- name: Create storage class yaml on host
  file:
      path: "/etc/sc.yaml"
      state: touch


- name: storage class yaml add data to file
  blockinfile:
    path: "/etc/sc.yaml"  
    state: present
    block: |
      apiVersion: storage.k8s.io/v1
      kind: StorageClass
      metadata:
          name: local-storage
          annotations:
             storageclass.kubernetes.io/is-default-class: "false"
      provisioner: kubernetes.io/no-provisioner
      reclaimPolicy: Retain
      allowVolumeExpansion: true
      volumeBindingMode: Immediate

- name: Create storage class
  become: true
  command: "{{ item }}"
  with_items:
      - "kubectl create -f /etc/sc.yaml"
  ignore_errors: true


###########################PROMETHEUS/GRAFANA INSTALL################################
- name: Install/Upgrade Prometheus/Grafana Helm chart
  become: true
  kubernetes.core.helm:
    name: prometheus
    chart_ref: kube-prometheus-stack
    chart_repo_url: https://prometheus-community.github.io/helm-charts
    namespace: prometheus-stack
    create_namespace: true
    #chart_version: "{{  }}"
    release_state: present
    values_files:
      - k8s_promvalues.yaml	 
    kubeconfig: /tmp/config

- name: Add prometheus/grafana repo, create  namespace, and install
  become: true  
  command: "{{ item }}"
  with_items:      
      - "kubectl patch svc prometheus-grafana  -n prometheus-stack -p '[{\"op\":\"replace\",\"path\":\"/spec/type\",\"value\":\"LoadBalancer\"}]' --type='json' --kubeconfig /root/.kube/config"

###########################LOKI INSTALL####################################################
- name: Create loki persistent volume yaml file
  file:
      path: "/etc/lokipv.yaml"
      state: touch
  ignore_errors: true

- name: add loki persistent volume code to lokipv.yaml
  blockinfile:
    path: "/etc/lokipv.yaml"  
    state: present
    block: |	  
      apiVersion: v1
      kind: PersistentVolume
      metadata:
        finalizers:
        - kubernetes.io/pv-protection
        name: loki
        namespace: prometheus-stack
      spec:
        accessModes:
        - ReadWriteOnce
        capacity:
          storage: 10Gi
        hostPath:
          path: /mnt
          type: ""
        persistentVolumeReclaimPolicy: Retain
        storageClassName: local-storage
        volumeMode: Filesystem

- name: Create persistent volume for Loki
  become: true
  command: "{{ item }}"
  with_items:
      - "kubectl create -f /etc/lokipv.yaml"

- name: Create lokivalues.yaml for loki
  file:
      path: "/etc/lokivalues.yaml"
      state: touch
      

- name: lokivalues.yaml add data to file
  blockinfile:
    path: "/etc/lokivalues.yaml"  
    state: present
    block: |
      loki:
        enabled: true
        image:
          tag: '2.9.11'
        securityContext:
          runAsGroup: 0
          runAsNonRoot: false
          runAsUser: 0
        persistence:
          enabled: true
          storageClassName: 'local-storage'
        tolerations:
        - effect: NoSchedule
          key: node-role.jarvice.io/jarvice-system
          operator: Exists
           

      promtail:
         enabled: true

      fluent-bit:
        enabled: false

      grafana:
        enabled: false

      prometheus:
        enabled: false
     


- name: Install/Upgrade Loki Helm chart
  become: true
  kubernetes.core.helm:
    name: loki
    chart_ref: loki-stack
    chart_repo_url: https://grafana.github.io/helm-charts
    namespace: prometheus-stack
    release_state: present
    values_files:
      - /etc/lokivalues.yaml
    kubeconfig: /tmp/config



- name: Remove etc/kubeconfig (delete file)
  become: true
  ansible.builtin.file:
    path: /etc/kubeconfig
    state: absent


#END
    #############OLD with commands, worth keeping########################3
#- name: Restart kubedns and wait, cis settings crash dns pods
#  become: true
#  shell: "{{ item }}"
#  with_items: 
#    - "kubectl rollout restart deployment coredns -n kube-system --kubeconfig /root/.kube/config"
#    - "kubectl wait --for=condition=Ready pods --all -n kube-system --timeout 480s --kubeconfig /root/.kube/config"   
#  ignore_errors: true

#- name: Add traefik repo and install traefik
#  become: true
#  shell: "{{ item }}"
#  with_items:
#      - "helm repo add traefik https://traefik.github.io/charts"
#      - "helm repo update"
#      #- "sudo su -"
#      #- "export KUBECONFIG=/root/.kube/config"
#      #- "mkdir ~/.kube"     
#      #- "kubectl config view --raw >~/.kube/config"
#      #- "kubectl create ns traefik-v2"
#      - "helm install -n kube-system traefik traefik/traefik --kubeconfig /root/.kube/config"

###KURED, COMMENTED OUT AS NOT BEING USED FOR PATCHING
#- name: Create values.yaml for kured
#  file:
#      path: "/etc/kuredvalues.yaml"
#      state: touch
      

#- name: values.yaml add data to file
#  blockinfile:
#    path: "/etc/kuredvalues.yaml"  
#    state: present
#    block: |
#      extraArgs:
#        reboot-days: mon,tue,wed,thu
#        start-time: 00:00
#        end-time: 06:00
#        time-zone: America/New_York
#      serviceAccount:
#        create: true
#        name: kured
#      updateStrategy: RollingUpdate


#- name: Add kured repo, create  namespace, and install
#  become: true
#  command: "{{ item }}"
#  with_items:
#      - "helm repo add kubereboot https://kubereboot.github.io/charts"
#      - "helm repo update"
#      - "helm upgrade --install kured kubereboot/kured --namespace kube-system -f /etc/kuredvalues.yaml --kubeconfig /root/.kube/config" 
#  ignore_errors: true


#- name: Create prometheus persisten volume yaml on host
#  file:
#      path: "/etc/prompv.yaml"
#      state: touch

#- name: storage class yaml add data to file
#  blockinfile:
#    path: "/etc/prompv.yaml"  
#    state: present
#    block: |	  
#      apiVersion: v1
#      kind: PersistentVolume
#      metadata:
#        finalizers:
#        - kubernetes.io/pv-protection
#        name: prometheus-grafana
#        namespace: prometheus-stack
#      spec:
#        accessModes:
#        - ReadWriteOnce
#        capacity:
#          storage: 10Gi
#        hostPath:
#          path: /mnt
#          type: ""
#        persistentVolumeReclaimPolicy: Retain
#        storageClassName: local-storage
#        volumeMode: Filesystem

#- name: Create persistent volume for Prometheus-Grafana
#  become: true
#  command: "{{ item }}"
#  with_items:
#      - "kubectl create -f /etc/prompv.yaml"


#- name: Create prometheus yaml on host
#  file:
#  file:
#      path: "/etc/promvalues.yaml"
#      state: touch


#- name: promvalues.yaml add data to file
#  blockinfile:
#    path: "/etc/promvalues.yaml"  
#    state: present
#    block: |
#      prometheus:
#        storage:
#          volumeClaimTemplate:
#           spec:
#             storageClassName: nfs-client
#             accessModes: ["ReadWriteONce"]
#             resources:
#               requests:
#                 storage: 10Gi      
#      tolerations:
#      - effect: NoSchedule
#        key: node-role.jarvice.io/jarvice-system
#        operator: Exists

#      grafana:
#        persistence:
#           enabled: true
#           size: 10Gi
#           storageClass: nfs-client
#      tolerations:
#      - effect: NoSchedule
#        key: node-role.jarvice.io/jarvice-system
#        operator: Exists

#- name: Add Loki to prometheus stack
#  become: true
#  command: "{{ item }}"
#  with_items:
#      - "helm repo add grafana https://grafana.github.io/helm-charts"
#      - "helm repo update"
#      - "helm upgrade --install loki grafana/loki-stack --values /etc/lokivalues.yaml -n prometheus-stack --kubeconfig /root/.kube/config"
#      #- "helm upgrade --install loki grafana/loki-stack --values /etc/lokivalues.yaml -n prometheus-stack --set loki.persistence.enabled=true set loki.persistence.storageClassName=nfs-client"
#  ignore_errors: true
