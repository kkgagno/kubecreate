#####For later##########################################################################
# - name: Show all the hosts in the inventory
#   ansible.builtin.debug:
#     msg: "{{ item }}"
#   loop: "{{ groups['kube_control_plane'] }}"
#   delegate_to: localhost

- name: Set control plane nodes jarvice labels
  k8s:
    state: patched
    kind: Node
    name: "{{ item }}"
    definition:
      #apiversion: v1      
      metadata:
        labels:
          node-role.kubernetes.io/jarvice-system: ""
  with_items: "{{ groups['kube_control_plane'] }}"
  delegate_to: localhost

- name: Set worker nodes jarvice labels
  k8s:
    state: patched
    kind: Node
    name: "{{ item }}"
    definition:
      #apiversion: v1      
      metadata:
        labels:
          node-role.kubernetes.io/jarvice-compute: ""
  with_items: "{{ groups['kube_node'] }}"
  delegate_to: localhost
############label nodes and apply taints#################################################
# - name: Set control plane nodes jarvice labels
#   become: true
#   shell: "kubectl label nodes {{ item }} node-role.kubernetes.io/jarvice-system=true"
#   with_items: "{{ groups['kube_control_plane'] }}"

# - name: Set control plane nodes jarvice taints
#   become: true
#   shell: "kubectl taint node {{ item }} node-role.jarvice.io/jarvice-system=true:NoSchedule;"
#   with_items: "{{ groups['kube_control_plane'] }}"
#   ignore_errors: true

# - name: Remove control plane labels
#   become: true
#   shell: "kubectl taint node {{ item }} node-role.kubernetes.io/control-plane=true:NoSchedule-"
#   with_items: "{{ groups['kube_control_plane'] }}"
#   ignore_errors: true

# - name: Set worker nodes jarvice labels
#   become: true
#   shell: "kubectl label nodes {{ item }} node-role.kubernetes.io/jarvice-compute=true"
#   with_items: "{{ groups['kube_node'] }}"

# - name: Set worker nodes jarvice taints
#   become: true
#   shell: "kubectl taint node {{ item }} node-role.jarvice.io/jarvice-compute=true:NoSchedule;"
#   with_items: "{{ groups['kube_node'] }}"
#   ignore_errors: true

# ##############Sets current deployments tolerations###################################################
# - name: Set tolerations on management pods and deployments to run on control planes
#   become: true
#   shell: "{{ item }}"
#   with_items: 
#     - "kubectl rollout restart deployment traefik -n kube-system"
#     - "kubectl patch deployment traefik -n kube-system --type merge --patch-file deploypatch.yaml"
#     - "kubectl rollout restart deployment coredns -n kube-system"
#     - "kubectl patch deployment coredns -n kube-system --type merge --patch-file deploypatch.yaml"
#     - "kubectl rollout restart deployment nfs-subdir-external-provisioner -n kube-system"
#     - "kubectl patch deployment nfs-subdir-external-provisioner --type merge --patch-file deploypatch.yaml -n kube-system"    
#     - "kubectl rollout restart deployment controller -n metallb-system"
#     - "kubectl patch deployment controller -n metallb-system --type merge --patch-file deploypatch.yaml"
#     - "kubectl rollout restart deployment cilium-operator -n kube-system"
#     - "kubectl patch deployment cilium-operator -n kube-system --type merge --patch-file deploypatch.yaml"
#     - "kubectl rollout restart deployment prometheus-kube-state-metrics -n prometheus-stack"
#     - "kubectl patch deployment prometheus-kube-state-metrics -n prometheus-stack --type merge --patch-file deploypatch.yaml"
#     - "kubectl rollout restart deployment prometheus-kube-prometheus-operator -n prometheus-stack"
#     - "kubectl patch deployment prometheus-kube-prometheus-operator -n prometheus-stack --type merge --patch-file deploypatch.yaml"
#     - "kubectl patch statefulset prometheus-grafana --type merge --patch-file deploypatch.yaml -n prometheus-stack"
#     - "kubectl delete pod prometheus-grafana-0 -n prometheus-stack"
#     - "kubectl delete pod loki-0 -n prometheus-stack"
#     - "kubectl delete pod alertmanager-prometheus-kube-prometheus-alertmanager-0 -n prometheus-stack"    
#     - "kubectl delete pod prometheus-prometheus-kube-prometheus-prometheus-0 -n prometheus-stack"
   
    


- name: Apply tolerations to Traefik Deployment
  kubernetes.core.k8s:
    #kubeonfig: /root/.kube/config
    state: present
    namespace: kube-system
    src: deploypatch.yaml
    validate_certs: false
  delegate_to: localhost

#END#########################################