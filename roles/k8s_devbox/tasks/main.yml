- name: Import vars
  run_once: true
  include_vars:
    file: inventory/local/cluster-variable.yaml
    name: vardata

##################Kubectl / Kubeadm install on devbox##################################################
- name: Create keyrings directory
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download Releasekey  
  become: true
  ansible.builtin.get_url: 
    url: "https://pkgs.k8s.io/core:/stable:/v{{ vardata.k8sversion }}/deb/Release.key"
    dest: "/etc/apt/keyrings/kubernetes-Release.key"
    mode: '0644'

- name: Convert Release key to GPG keyring
  ansible.builtin.command:
    cmd: "gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg /etc/apt/keyrings/kubernetes-Release.key"
  args:
    creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

- name: Add Kubernetes APT repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v{{ vardata.k8sversion }}/deb/ /"
    filename: kubernetes
    state: present


- name: Update apt repo and cache on all Debian/Ubuntu boxes
  apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

- name: Install kubeadm and kubectl
  apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  loop:
    - kubeadm
    - kubectl

##################Copy kube config file to root#####################################################
- name: Copy kubeconfig to root user config
  block:
    - name: Ensure .kube directory exists for root
      file:
        path: /root/.kube
        state: directory
        owner: root
        group: root
        mode: '0700'

    - name: Copy kubeconfig to /root/.kube/config
      copy:
        src: /etc/kubeconfig
        dest: /root/.kube/config
        owner: root
        group: root
        mode: '0600'

##################Helm install on devbox############################################################
- name: Download Helm
  become: true
  ansible.builtin.get_url:
    url: https://get.helm.sh/helm-v3.16.3-linux-amd64.tar.gz
    dest: /tmp/helm-v3.16.3-linux-amd64.tar.gz
    mode: '0700'    
  
- name: Ensure temp dir exists
  ansible.builtin.file:
    path: /tmp/helm
    state: directory
    mode: '0755'

- name: Extract Helm archive locally to /tmp/helm
  ansible.builtin.unarchive:
    src: /etc/helm-v3.16.3-linux-amd64.tar.gz  
    dest: /tmp/helm
    remote_src: true   

- name: Move helm binary to /usr/local/bin
  ansible.builtin.copy:
    src: /tmp/helm/linux-amd64/helm
    dest: /usr/local/bin/helm
    mode: '0755'
    remote_src: true   

- name: Clean up extracted temp files
  ansible.builtin.file:
    path: /tmp/helm
    state: absent

- name: Remove helm tar file (delete file)
  become: true
  ansible.builtin.file:
    path: /tmp/helm-v3.16.3-linux-amd64.tar.gz
    state: absent

#END
#######Old commands#################################################################
#- name: Set up kubectl for the root user
#  become: true
#  command: "{{ item }}"
#  with_items:
#      - "sudo mkdir -p /root/.kube"
#      - "sudo chown -R root /root/.kube"
#      - "sudo cp /etc/kubeconfig /root/.kube/config"
#      - "chmod 600 /root/.kube/config"


#- name: Download cilium
#  ansible.builtin.get_url:
#    url: https://github.com/cilium/cilium-cli/releases/download/v0.16.22/cilium-linux-amd64.tar.gz
#    dest: /etc/cilium-linux-amd64.tar.gz
#    mode: '0440'

#- name: Extract cilium.tgz into /usr/local/bin
#  ansible.builtin.unarchive:
#    src: /etc/cilium-linux-amd64.tar.gz
#    dest: /usr/local/bin
#    #remote_src: yes

#- name: Remove file (delete file)
#  ansible.builtin.file:
#    path: /etc/cilium-linux-amd64.tar.gz
#    state: absent

#- name: install cilium
#  become: true
#  shell: "cilium install --set ipam.operator.clusterPoolIPv4PodCIDRList={{ vardata.podnetwork }} --set ipv6.enabled=false"
#  register: cilium
#- debug:
#     msg:
#      - "{{ cilium.stdout }}"

#- name: Add cilium repo and install cilium
#  become: true
#  command: "{{ item }}"
#  with_items:
#      - "helm repo add cilium https://helm.cilium.io/"
#      - "helm repo update"        
#      - "helm install cilium cilium/cilium --version 1.16.4 --namespace kube-system --set ipv6.enabled=false --set ipam.operator.clusterPoolIPv4PodCIDRList={{ vardata.podnetwork }}"





#- name: Install Calico network plugin
#  become: no
#  shell: "kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml"



#- name: Download Releasekey  
#  become: true
#  shell: "curl -fsSL https://pkgs.k8s.io/core:/stable:/v{{ vardata.k8sversion }}/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg --yes"
#  register: key
#- debug:
#     msg:
#       - "{{ key.stdout }}"

#- name: echo to sources list
#  become: true
#  shell: "echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v{{ vardata.k8sversion }}/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list"
#  register: list
#- debug:
#     msg:
#       - "{{ list.stdout }}"

#- name: extract helm helm.gz
#  become: true
#  shell: "{{ item }}"
#  with_items:
#          - "sudo tar -xvf /etc/helm-v3.16.3-linux-amd64.tar.gz"

#- name: Extract helm.gz
#  become: true
#  ansible.builtin.unarchive:
#    src: /etc/helm-v3.16.3-linux-amd64.tar.gz
#    dest: /etc/
#    #remote_src: yes


#- name: Copy file with owner and permissions
#  become: true
#  ansible.builtin.copy:
#    src: /etc/linux-amd64/
#    dest: /usr/local/bin/
#    mode: '0700'
#    #remote_src: yes
